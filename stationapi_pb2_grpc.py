# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import stationapi_pb2 as stationapi__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in stationapi_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StationAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStationById = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationById',
                request_serializer=stationapi__pb2.GetStationByIdRequest.SerializeToString,
                response_deserializer=stationapi__pb2.SingleStationResponse.FromString,
                _registered_method=True)
        self.GetStationByIdList = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationByIdList',
                request_serializer=stationapi__pb2.GetStationByIdListRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleStationResponse.FromString,
                _registered_method=True)
        self.GetStationsByGroupId = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationsByGroupId',
                request_serializer=stationapi__pb2.GetStationByGroupIdRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleStationResponse.FromString,
                _registered_method=True)
        self.GetStationsByCoordinates = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationsByCoordinates',
                request_serializer=stationapi__pb2.GetStationByCoordinatesRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleStationResponse.FromString,
                _registered_method=True)
        self.GetStationsByLineId = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationsByLineId',
                request_serializer=stationapi__pb2.GetStationByLineIdRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleStationResponse.FromString,
                _registered_method=True)
        self.GetStationsByName = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationsByName',
                request_serializer=stationapi__pb2.GetStationsByNameRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleStationResponse.FromString,
                _registered_method=True)
        self.GetStationsByLineGroupId = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetStationsByLineGroupId',
                request_serializer=stationapi__pb2.GetStationsByLineGroupIdRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleStationResponse.FromString,
                _registered_method=True)
        self.GetTrainTypesByStationId = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetTrainTypesByStationId',
                request_serializer=stationapi__pb2.GetTrainTypesByStationIdRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleTrainTypeResponse.FromString,
                _registered_method=True)
        self.GetRoutes = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetRoutes',
                request_serializer=stationapi__pb2.GetRouteRequest.SerializeToString,
                response_deserializer=stationapi__pb2.RouteResponse.FromString,
                _registered_method=True)
        self.GetLineById = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetLineById',
                request_serializer=stationapi__pb2.GetLineByIdRequest.SerializeToString,
                response_deserializer=stationapi__pb2.SingleLineResponse.FromString,
                _registered_method=True)
        self.GetLinesByName = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetLinesByName',
                request_serializer=stationapi__pb2.GetLinesByNameRequest.SerializeToString,
                response_deserializer=stationapi__pb2.MultipleLineResponse.FromString,
                _registered_method=True)
        self.GetConnectedRoutes = channel.unary_unary(
                '/app.trainlcd.grpc.StationAPI/GetConnectedRoutes',
                request_serializer=stationapi__pb2.GetConnectedStationsRequest.SerializeToString,
                response_deserializer=stationapi__pb2.RouteResponse.FromString,
                _registered_method=True)


class StationAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStationById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStationByIdList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStationsByGroupId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStationsByCoordinates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStationsByLineId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStationsByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStationsByLineGroupId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainTypesByStationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLineById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLinesByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectedRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StationAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStationById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationById,
                    request_deserializer=stationapi__pb2.GetStationByIdRequest.FromString,
                    response_serializer=stationapi__pb2.SingleStationResponse.SerializeToString,
            ),
            'GetStationByIdList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationByIdList,
                    request_deserializer=stationapi__pb2.GetStationByIdListRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleStationResponse.SerializeToString,
            ),
            'GetStationsByGroupId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationsByGroupId,
                    request_deserializer=stationapi__pb2.GetStationByGroupIdRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleStationResponse.SerializeToString,
            ),
            'GetStationsByCoordinates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationsByCoordinates,
                    request_deserializer=stationapi__pb2.GetStationByCoordinatesRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleStationResponse.SerializeToString,
            ),
            'GetStationsByLineId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationsByLineId,
                    request_deserializer=stationapi__pb2.GetStationByLineIdRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleStationResponse.SerializeToString,
            ),
            'GetStationsByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationsByName,
                    request_deserializer=stationapi__pb2.GetStationsByNameRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleStationResponse.SerializeToString,
            ),
            'GetStationsByLineGroupId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStationsByLineGroupId,
                    request_deserializer=stationapi__pb2.GetStationsByLineGroupIdRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleStationResponse.SerializeToString,
            ),
            'GetTrainTypesByStationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainTypesByStationId,
                    request_deserializer=stationapi__pb2.GetTrainTypesByStationIdRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleTrainTypeResponse.SerializeToString,
            ),
            'GetRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoutes,
                    request_deserializer=stationapi__pb2.GetRouteRequest.FromString,
                    response_serializer=stationapi__pb2.RouteResponse.SerializeToString,
            ),
            'GetLineById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLineById,
                    request_deserializer=stationapi__pb2.GetLineByIdRequest.FromString,
                    response_serializer=stationapi__pb2.SingleLineResponse.SerializeToString,
            ),
            'GetLinesByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLinesByName,
                    request_deserializer=stationapi__pb2.GetLinesByNameRequest.FromString,
                    response_serializer=stationapi__pb2.MultipleLineResponse.SerializeToString,
            ),
            'GetConnectedRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectedRoutes,
                    request_deserializer=stationapi__pb2.GetConnectedStationsRequest.FromString,
                    response_serializer=stationapi__pb2.RouteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.trainlcd.grpc.StationAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('app.trainlcd.grpc.StationAPI', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StationAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStationById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationById',
            stationapi__pb2.GetStationByIdRequest.SerializeToString,
            stationapi__pb2.SingleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStationByIdList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationByIdList',
            stationapi__pb2.GetStationByIdListRequest.SerializeToString,
            stationapi__pb2.MultipleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStationsByGroupId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationsByGroupId',
            stationapi__pb2.GetStationByGroupIdRequest.SerializeToString,
            stationapi__pb2.MultipleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStationsByCoordinates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationsByCoordinates',
            stationapi__pb2.GetStationByCoordinatesRequest.SerializeToString,
            stationapi__pb2.MultipleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStationsByLineId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationsByLineId',
            stationapi__pb2.GetStationByLineIdRequest.SerializeToString,
            stationapi__pb2.MultipleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStationsByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationsByName',
            stationapi__pb2.GetStationsByNameRequest.SerializeToString,
            stationapi__pb2.MultipleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStationsByLineGroupId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetStationsByLineGroupId',
            stationapi__pb2.GetStationsByLineGroupIdRequest.SerializeToString,
            stationapi__pb2.MultipleStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrainTypesByStationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetTrainTypesByStationId',
            stationapi__pb2.GetTrainTypesByStationIdRequest.SerializeToString,
            stationapi__pb2.MultipleTrainTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetRoutes',
            stationapi__pb2.GetRouteRequest.SerializeToString,
            stationapi__pb2.RouteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLineById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetLineById',
            stationapi__pb2.GetLineByIdRequest.SerializeToString,
            stationapi__pb2.SingleLineResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLinesByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetLinesByName',
            stationapi__pb2.GetLinesByNameRequest.SerializeToString,
            stationapi__pb2.MultipleLineResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConnectedRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/app.trainlcd.grpc.StationAPI/GetConnectedRoutes',
            stationapi__pb2.GetConnectedStationsRequest.SerializeToString,
            stationapi__pb2.RouteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
